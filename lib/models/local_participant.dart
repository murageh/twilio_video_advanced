/// Represents the local participant in a Twilio Video room.
///
/// The local participant is the current user who has joined the video room.
/// This class provides information about the local participant's identity,
/// connection status, and the current state of their audio and video tracks.
///
/// ```dart
/// // Access local participant info from room connected event
/// if (event is RoomConnectedEvent) {
///   final local = event.room.localParticipant;
///   print('Local participant: ${local.identity}');
///   print('Video published: ${local.isVideoPublished}');
/// }
/// ```
class LocalParticipant {
  /// The unique identity of the local participant.
  ///
  /// This is the user-friendly identifier that was specified when
  /// generating the access token for the current user.
  final String identity;

  /// The unique server-assigned identifier for the local participant.
  ///
  /// This SID is generated by Twilio when joining the room and
  /// remains constant for the duration of the session.
  final String sid;

  /// Whether the local audio track is currently enabled.
  ///
  /// When `true`, the microphone is unmuted and audio is being captured.
  /// When `false`, the microphone is muted (track disabled but may still be published).
  final bool isAudioEnabled;

  /// Whether the local video track is currently enabled.
  ///
  /// When `true`, the camera is on and video is being captured.
  /// When `false`, the camera is off (track disabled but may still be published).
  final bool isVideoEnabled;

  /// Whether the local audio track is currently published to the room.
  ///
  /// When `true`, other participants can hear this participant's audio.
  /// When `false`, this participant is not broadcasting audio (observer mode for audio).
  final bool isAudioPublished;

  /// Whether the local video track is currently published to the room.
  ///
  /// When `true`, other participants can see this participant's video.
  /// When `false`, this participant is not broadcasting video (observer mode for video).
  final bool isVideoPublished;

  /// Custom display name for this participant.
  ///
  /// This is a user-friendly name that can be set at runtime to override
  /// the default identity. If null, the identity will be used for display.
  final String? displayName;

  /// The name to display in the UI.
  ///
  /// Returns [displayName] if set, otherwise returns [identity].
  String get name => displayName ?? identity;

  /// Creates a local participant.
  LocalParticipant({
    required this.identity,
    required this.sid,
    required this.isAudioEnabled,
    required this.isVideoEnabled,
    required this.isAudioPublished,
    required this.isVideoPublished,
    this.displayName,
  });

  /// Creates a [LocalParticipant] from JSON data.
  ///
  /// This is typically used internally by the plugin to deserialize
  /// participant data received from the native platform.
  factory LocalParticipant.fromJson(Map<String, dynamic> json) {
    return LocalParticipant(
      identity: json['identity'],
      sid: json['sid'],
      isAudioEnabled: json['isAudioEnabled'],
      isVideoEnabled: json['isVideoEnabled'],
      isAudioPublished: json['isAudioPublished'],
      isVideoPublished: json['isVideoPublished'],
      displayName: json['displayName'], // This will be null from native initially
    );
  }

  /// Creates a copy of this participant with some fields replaced.
  ///
  /// This is useful for updating participant information while maintaining
  /// immutability.
  LocalParticipant copyWith({
    String? identity,
    String? sid,
    bool? isAudioEnabled,
    bool? isVideoEnabled,
    bool? isAudioPublished,
    bool? isVideoPublished,
    String? displayName,
  }) {
    return LocalParticipant(
      identity: identity ?? this.identity,
      sid: sid ?? this.sid,
      isAudioEnabled: isAudioEnabled ?? this.isAudioEnabled,
      isVideoEnabled: isVideoEnabled ?? this.isVideoEnabled,
      isAudioPublished: isAudioPublished ?? this.isAudioPublished,
      isVideoPublished: isVideoPublished ?? this.isVideoPublished,
      displayName: displayName ?? this.displayName,
    );
  }
}
